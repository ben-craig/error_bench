#pragma once

#ifdef _MSC_VER
#include <intrin.h>
#endif

#ifdef _MSC_VER
#define CONDITIONAL_NOP(x, limit) if ((x) < limit) __nop()
#else
#define CONDITIONAL_NOP(x, limit) if ((x) < limit) __asm__ __volatile__("nop")
#endif

#define NOP_SLED_IMPL(limit)                    \
  CONDITIONAL_NOP(0, limit);       \
  CONDITIONAL_NOP(1, limit);       \
  CONDITIONAL_NOP(2, limit);       \
  CONDITIONAL_NOP(3, limit);       \
  CONDITIONAL_NOP(4, limit);       \
  CONDITIONAL_NOP(5, limit);       \
  CONDITIONAL_NOP(6, limit);       \
  CONDITIONAL_NOP(7, limit);       \
  CONDITIONAL_NOP(8, limit);       \
  CONDITIONAL_NOP(9, limit);       \
  CONDITIONAL_NOP(10, limit);      \
  CONDITIONAL_NOP(11, limit);      \
  CONDITIONAL_NOP(12, limit);      \
  CONDITIONAL_NOP(13, limit);      \
  CONDITIONAL_NOP(14, limit);      \
  CONDITIONAL_NOP(15, limit);      \
  CONDITIONAL_NOP(16, limit);      \
  CONDITIONAL_NOP(17, limit);      \
  CONDITIONAL_NOP(18, limit);      \
  CONDITIONAL_NOP(19, limit);      \
  CONDITIONAL_NOP(20, limit);      \
  CONDITIONAL_NOP(21, limit);      \
  CONDITIONAL_NOP(22, limit);      \
  CONDITIONAL_NOP(23, limit);      \
  CONDITIONAL_NOP(24, limit);      \
  CONDITIONAL_NOP(25, limit);      \
  CONDITIONAL_NOP(26, limit);      \
  CONDITIONAL_NOP(27, limit);      \
  CONDITIONAL_NOP(28, limit);      \
  CONDITIONAL_NOP(29, limit);      \
  CONDITIONAL_NOP(30, limit);      \
  CONDITIONAL_NOP(31, limit)

#define NOP_SLED_HEAD_A NOP_SLED_IMPL(NOP_COUNT_A)
#define NOP_SLED_TAIL_A NOP_SLED_IMPL(31 - NOP_COUNT_A)
#define NOP_SLED_HEAD_B NOP_SLED_IMPL(NOP_COUNT_B)
#define NOP_SLED_TAIL_B NOP_SLED_IMPL(31 - NOP_COUNT_B)
#define NOP_SLED_HEAD_C NOP_SLED_IMPL(NOP_COUNT_C)
#define NOP_SLED_TAIL_C NOP_SLED_IMPL(31 - NOP_COUNT_C)
#define NOP_SLED_HEAD_D NOP_SLED_IMPL(NOP_COUNT_D)
#define NOP_SLED_TAIL_D NOP_SLED_IMPL(31 - NOP_COUNT_D)
#define NOP_SLED_HEAD_0 NOP_SLED_IMPL(NOP_COUNT_0)
#define NOP_SLED_TAIL_0 NOP_SLED_IMPL(31 - NOP_COUNT_0)
#define NOP_SLED_HEAD_1 NOP_SLED_IMPL(NOP_COUNT_1)
#define NOP_SLED_TAIL_1 NOP_SLED_IMPL(31 - NOP_COUNT_1)
#define NOP_SLED_HEAD_2 NOP_SLED_IMPL(NOP_COUNT_2)
#define NOP_SLED_TAIL_2 NOP_SLED_IMPL(31 - NOP_COUNT_2)
#define NOP_SLED_HEAD_3 NOP_SLED_IMPL(NOP_COUNT_3)
#define NOP_SLED_TAIL_3 NOP_SLED_IMPL(31 - NOP_COUNT_3)
#define NOP_SLED_HEAD_4 NOP_SLED_IMPL(NOP_COUNT_4)
#define NOP_SLED_TAIL_4 NOP_SLED_IMPL(31 - NOP_COUNT_4)
#define NOP_SLED_HEAD_5 NOP_SLED_IMPL(NOP_COUNT_5)
#define NOP_SLED_TAIL_5 NOP_SLED_IMPL(31 - NOP_COUNT_5)
#define NOP_SLED_HEAD_6 NOP_SLED_IMPL(NOP_COUNT_6)
#define NOP_SLED_TAIL_6 NOP_SLED_IMPL(31 - NOP_COUNT_6)
#define NOP_SLED_HEAD_7 NOP_SLED_IMPL(NOP_COUNT_7)
#define NOP_SLED_TAIL_7 NOP_SLED_IMPL(31 - NOP_COUNT_7)
#define NOP_SLED_HEAD_8 NOP_SLED_IMPL(NOP_COUNT_8)
#define NOP_SLED_TAIL_8 NOP_SLED_IMPL(31 - NOP_COUNT_8)
#define NOP_SLED_HEAD_9 NOP_SLED_IMPL(NOP_COUNT_9)
#define NOP_SLED_TAIL_9 NOP_SLED_IMPL(31 - NOP_COUNT_9)
#define NOP_SLED_HEAD_10 NOP_SLED_IMPL(NOP_COUNT_10)
#define NOP_SLED_TAIL_10 NOP_SLED_IMPL(31 - NOP_COUNT_10)
#define NOP_SLED_HEAD_11 NOP_SLED_IMPL(NOP_COUNT_11)
#define NOP_SLED_TAIL_11 NOP_SLED_IMPL(31 - NOP_COUNT_11)
#define NOP_SLED_HEAD_12 NOP_SLED_IMPL(NOP_COUNT_12)
#define NOP_SLED_TAIL_12 NOP_SLED_IMPL(31 - NOP_COUNT_12)
#define NOP_SLED_HEAD_13 NOP_SLED_IMPL(NOP_COUNT_13)
#define NOP_SLED_TAIL_13 NOP_SLED_IMPL(31 - NOP_COUNT_13)
#define NOP_SLED_HEAD_14 NOP_SLED_IMPL(NOP_COUNT_14)
#define NOP_SLED_TAIL_14 NOP_SLED_IMPL(31 - NOP_COUNT_14)
#define NOP_SLED_HEAD_15 NOP_SLED_IMPL(NOP_COUNT_15)
#define NOP_SLED_TAIL_15 NOP_SLED_IMPL(31 - NOP_COUNT_15)
